
import java.awt.Component;
import java.awt.Container;
import java.awt.FileDialog;
import java.awt.MenuItem;
import java.awt.ScrollPane;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.DataFlavor;
import java.awt.datatransfer.StringSelection;
import java.awt.datatransfer.Transferable;
import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextPane;
import javax.swing.KeyStroke;
import javax.swing.event.UndoableEditEvent;
import javax.swing.event.UndoableEditListener;
import javax.swing.undo.CannotRedoException;
import javax.swing.undo.CannotUndoException;
import javax.swing.undo.UndoManager;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Karthik.C
 */
public class NewJFrame extends javax.swing.JFrame {
     private String fileName;
    private JFrame output_frame;
    private JMenuBar menu_bar;
    private JMenu file_menu, edit_menu;
    private JMenuItem copy_text, cut_text, paste_text;
    private JMenuItem save_file, open_file;
    private JTextArea text_area;
    private String buffer_contents;
    private Clipboard universal_buffer;
    private Transferable tc;
    private StringSelection data;
    private JFileChooser fc;
    private JButton button;
    
    private UndoManager manager = new UndoManager();
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        System.out.println("Hello");
        setSize(600, 600);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Container pane = getContentPane();

        universal_buffer = Toolkit.getDefaultToolkit().getSystemClipboard();

        menu_bar = new JMenuBar();
        file_menu = new JMenu("File");
        edit_menu = new JMenu("Edit");
        copy_text = new JMenuItem("Copy");
        cut_text = new JMenuItem("Cut");
        paste_text = new JMenuItem("Paste");
        open_file = new JMenuItem("Open");
        save_file = new JMenuItem("Save");
        
        setJMenuBar(menu_bar);
        add(jToolBar1);
        
        menu_bar.add(file_menu);
        menu_bar.add(edit_menu);
        
        edit_menu.add(cut_text);
        edit_menu.add(copy_text);
        edit_menu.add(paste_text);
        
        file_menu.add(open_file);
        file_menu.add(save_file);
        
        copy_text.setAccelerator(KeyStroke.getKeyStroke('C', Toolkit.getDefaultToolkit(  ).getMenuShortcutKeyMask(  ), false));
        cut_text.setAccelerator(KeyStroke.getKeyStroke('X', Toolkit.getDefaultToolkit(  ).getMenuShortcutKeyMask(  ), false));
        paste_text.setAccelerator(KeyStroke.getKeyStroke('P', Toolkit.getDefaultToolkit(  ).getMenuShortcutKeyMask(  ), false));
        open_file.setAccelerator(KeyStroke.getKeyStroke('O', Toolkit.getDefaultToolkit(  ).getMenuShortcutKeyMask(  ), false));
        save_file.setAccelerator(KeyStroke.getKeyStroke('S', Toolkit.getDefaultToolkit(  ).getMenuShortcutKeyMask(  ), false));

        ButtonListener b6 = new ButtonListener();
        jButton6.addActionListener(b6);
        jButton5.addActionListener(b6);
        jButton11.addActionListener(b6);
        jButton10.addActionListener(b6);
        jButton12.addActionListener(b6);
        
        jTextPane1.getDocument().addUndoableEditListener(new UndoableEditListener() {

            @Override
            public void undoableEditHappened(UndoableEditEvent e) { 
                manager.addEdit(e.getEdit());
            }
        });
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jToolBar1 = new javax.swing.JToolBar();
        jButton8 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        jButton1.setText("jButton1");

        jButton3.setText("jButton3");

        jButton2.setText("jButton2");

        jButton4.setText("jButton4");

        jButton7.setText("jButton7");

        jButton9.setText("jButton9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jToolBar1.setRollover(true);

        jButton8.setIcon(new javax.swing.ImageIcon("C:\\Users\\Karthik.C\\Desktop\\new.jpg")); // NOI18N
        jToolBar1.add(jButton8);

        jButton10.setIcon(new javax.swing.ImageIcon("C:\\Users\\Karthik.C\\Desktop\\open.png")); // NOI18N
        jToolBar1.add(jButton10);

        jButton12.setIcon(new javax.swing.ImageIcon("C:\\Users\\Karthik.C\\Desktop\\save.png")); // NOI18N
        jToolBar1.add(jButton12);

        jButton6.setIcon(new javax.swing.ImageIcon("C:\\Users\\Karthik.C\\Desktop\\cut.png")); // NOI18N
        jToolBar1.add(jButton6);

        jButton5.setIcon(new javax.swing.ImageIcon("C:\\Users\\Karthik.C\\Desktop\\copy.png")); // NOI18N
        jToolBar1.add(jButton5);

        jButton11.setIcon(new javax.swing.ImageIcon("C:\\Users\\Karthik.C\\Desktop\\paste.png")); // NOI18N
        jToolBar1.add(jButton11);

        jButton13.setIcon(new javax.swing.ImageIcon("C:\\Users\\Karthik.C\\Desktop\\undo.png")); // NOI18N
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton13);

        jButton14.setIcon(new javax.swing.ImageIcon("C:\\Users\\Karthik.C\\Desktop\\redo.png")); // NOI18N
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton14);

        jTextPane1.setPreferredSize(new java.awt.Dimension(600, 600));
        jScrollPane2.setViewportView(jTextPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(111, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        manager.undo();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        manager.redo();
    }//GEN-LAST:event_jButton14ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       NewJFrame nj = new NewJFrame();
       nj.setVisible(true);
       
       
    }
     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    private static class MenuItemActionListener implements ActionListener {

        public MenuItemActionListener(Container pane) {
        }

        @Override
        public void actionPerformed(ActionEvent e) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    }

    public class ButtonListener implements ActionListener
    {
        public void actionPerformed(ActionEvent e) {
        JButton input_click = (JButton)e.getSource();
        if(input_click == jButton6)
        {
            //CUT
            buffer_contents = jTextPane1.getSelectedText();
            data = new StringSelection(buffer_contents);
            universal_buffer.setContents(data, data);
            jTextPane1.replaceSelection("");
        }
        else if(input_click == jButton5)
        {
            //COPY
            buffer_contents = jTextPane1.getSelectedText();
            data = new StringSelection(buffer_contents);
            universal_buffer.setContents(data, data);
        }
        else if(input_click == jButton11)
        {
            //PASTE
            try {
                buffer_contents = (String) universal_buffer.getContents(null).getTransferData(DataFlavor.stringFlavor);
            } catch (UnsupportedFlavorException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(NewJFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            jTextPane1.replaceSelection(buffer_contents);
        }
        else if(input_click == jButton8)
        {
            //NEW
        }
        else if (input_click == jButton12)
        {
            //SAVE
            String FileName = "untitled";
            
            File f1=new File(FileName);
		if(!f1.exists()){
			File f=null;
		JFileChooser chooser=new JFileChooser();
		JFrame jf=new JFrame();
		/*try {
			Plastic3DLookAndFeel.setCurrentTheme(new DarkStar());
			UIManager.setLookAndFeel(new Plastic3DLookAndFeel());
			
		} catch (UnsupportedLookAndFeelException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}*/
		if(chooser.showSaveDialog(jf)== JFileChooser.APPROVE_OPTION){
			f=chooser.getSelectedFile();
			try {
				FileWriter writer=new FileWriter(f);
				writer.write(jTextPane1.getText());
				writer.close();
			} catch (IOException x) {
				// TODO Auto-generated catch block
				x.printStackTrace();
			}
		}
                return;
		}
		
		try {
			FileWriter writer=new FileWriter(f1);
			writer.write(jTextPane1.getText());
			writer.close();
		} catch (IOException x) {
			// TODO Auto-generated catch block
			x.printStackTrace();
		}
        }
        else if(input_click == jButton10)
        {
            //OPEN
            System.out.println("Opening file");
            StringBuilder sb=new StringBuilder();
		File f=null;
		JFileChooser chooser=new JFileChooser();
		JFrame jf=new JFrame();
		
		if(chooser.showOpenDialog(jf)== JFileChooser.APPROVE_OPTION){
			f=chooser.getSelectedFile();
			try {
				BufferedReader reader=new BufferedReader(new FileReader(f));
				String rd;
				while((rd=reader.readLine())!=null){
					sb.append(rd);
					sb.append("\n");
				}
				
				reader.close();
			} catch (IOException x) {
				// TODO Auto-generated catch block
				x.printStackTrace();
			}
		}
		
		 jTextPane1.setText(sb.toString());  
        }
       }
    }
    
}

